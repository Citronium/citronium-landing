@NonCPS

def repositoryName  = 'citronium-landing'
def jenkinsURL      = 'https://jenkins.citronium.com/view/Base/job/citronium-landing-create-conteiner/'
def chatId          = ''
def token           = ''

def branch        = env.BRANCH_NAME

node {
    try {
      stage("Checkout") {
         git branch: "${branch}",
          url: 'git@github.com:Citronium/citronium-landing.git'
      }
      
      stage("Docker start at psrv5") {
        sh "docker-compose -p citronium-landing up -d"
      }

    } catch(e) {
      sendMessage(Error ${e}")
      throw e
    }
}

def sendChangeLogs() {
    def commitMessages = ""
    def changeLogSets = currentBuild.changeSets
    for (int i = 0; i < changeLogSets.size(); i++) {
        def entries = changeLogSets[i].items
        for (int j = 0; j < entries.length; j++) {
            def entry = entries[j]
            commitMessages = commitMessages + "\n> ${entry.author}: ${entry.msg} "
        }
    }
    return commitMessages
}

def sendMessage(message) {
    //sh(returnStdout: false, script: "curl -X POST -H 'Content-Type: application/json' -d '{\"chat_id\": \"${chatId}\", \"text\": \"${message}\", \"disable_notification\": true}' https://api.telegram.org/bot${token}/sendMessage")
}
